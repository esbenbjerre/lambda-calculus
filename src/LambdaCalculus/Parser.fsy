%{
  open Absyn
%}

%token LAMBDA
%token <string> VAR
%token DOT
%token LPAR RPAR
%token EOF

%start start
%type <Absyn.Term> start 

%%

start:
    Term EOF              { $1 }
;

Term:
    LAMBDA Vars DOT Term  { List.fold (fun exp arg -> Lam(arg, exp)) $4 $2 }
  | Expr                  { $1 }
;

Vars:
    VAR                   { [ $1 ] }
  | Vars VAR              { $2 :: $1 }

Expr:
    Expr'                 { $1 }
  | Expr Expr'            { App($1, $2) }

Expr':
   VAR                    { Var($1) }
  | LPAR Term RPAR        { $2 }
;